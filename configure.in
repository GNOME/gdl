AC_INIT(gdlConf.sh.in)
AM_PROG_XML_I18N_TOOLS

dnl ==========================================================================
dnl
dnl If you add a version number here, you *must* add an AC_SUBST line for
dnl it too, or it will never make it into the spec file!
dnl
dnl ==========================================================================

GLIB_REQUIRED=1.2.0
GTK_REQUIRED=1.2.0
GNOME_LIBS_REQUIRED=1.2.9
BONOBO_REQUIRED=1.0.7
OAF_REQUIRED=0.6.5
GNOME_VFS_REQUIRED=1.0
LIBXML_REQUIRED=1.8.15
GAL_REQUIRED=0.8.0

AC_SUBST(GLIB_REQUIRED)
AC_SUBST(GTK_REQUIRED)
AC_SUBST(GNOME_LIBS_REQUIRED)
AC_SUBST(BONOBO_REQUIRED)
AC_SUBST(OAF_REQUIRED)
AC_SUBST(GNOME_VFS_REQUIRED)
AC_SUBST(LIBXML_REQUIRED)
AC_SUBST(GAL_REQUIRED)

dnl ==========================================================================

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gdl,0.1.0)

AM_ACLOCAL_INCLUDE(macros)

AM_MAINTAINER_MODE

dnl =====================================================================
dnl ======== Ctags stuffs below =========================================

dnl Define convenience macros
dnl -------------------------
dnl CHECK_HEADER_DEFINE(LABEL, HEADER [,ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND ] ])
AC_DEFUN(CHECK_HEADER_DEFINE,
[
	AC_MSG_CHECKING("if $1 is defined in $2")
	AC_EGREP_CPP(yes,
[#include <$2>
#ifdef $1
  yes
#endif
], [
	AC_MSG_RESULT(yes)
	$3
], [
	AC_MSG_RESULT(no)
	$4
]) ])

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_RANLIB
AM_PROG_CC_STDC
AC_HEADER_STDC

dnl Checks for programs.
AC_CHECK_PROG(GLIB_CONFIG, glib-config, true, false)

dnl Checks for libraries.
GLIB_LIBS="`glib-config --libs`"
AC_SUBST(GLIB_LIBS)

dnl Checks for header files.
GLIB_CFLAGS="`glib-config --cflags`"
AC_SUBST(GLIB_CFLAGS)
AC_CHECK_HEADERS(dirent.h fcntl.h fnmatch.h stat.h stdlib.h string.h)
AC_CHECK_HEADERS(time.h types.h unistd.h)
AC_CHECK_HEADERS(sys/dir.h sys/stat.h sys/times.h sys/types.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_CYGWIN
AC_MINGW32
AC_C_CONST
AC_OBJEXT
AC_EXEEXT

AC_TYPE_SIZE_T
AC_TYPE_OFF_T

AC_MSG_CHECKING("for fpos_t")
AC_EGREP_HEADER(fpos_t, stdio.h, AC_MSG_RESULT(yes),
[
    AC_MSG_RESULT(no)
    AC_DEFINE(fpos_t, long)
])

AC_MSG_CHECKING("for clock_t")
AC_EGREP_HEADER(clock_t, time.h, AC_MSG_RESULT(yes),
[
    AC_MSG_RESULT(no)
    AC_DEFINE(clock_t, long)
])

CHECK_HEADER_DEFINE(L_tmpnam, stdio.h,, AC_DEFINE(L_tmpnam, 20))

CHECK_HEADER_DEFINE(INT_MAX, limits.h,,
    CHECK_HEADER_DEFINE(MAXINT, limits.h,
        AC_DEFINE(INT_MAX, MAXINT), AC_DEFINE(INT_MAX, 32767)))

AC_MSG_CHECKING(if struct stat contains st_ino)
AC_TRY_COMPILE([#include <sys/stat.h>], [
    struct stat st;
    stat(".", &st);
    if (st.st_ino > 0)
        exit(0);
], have_st_ino=yes, have_st_ino=no)
AC_MSG_RESULT($have_st_ino)
if test yes = "$have_st_ino"; then
    AC_DEFINE(HAVE_STAT_ST_INO)
fi

dnl Checks for library functions.
AC_CHECK_FUNCS(fnmatch)
AC_CHECK_FUNCS(strstr)
AC_CHECK_FUNCS(stricmp)
AC_CHECK_FUNCS(strnicmp)

AC_CHECK_FUNCS(fgetpos, have_fgetpos=yes)

dnl SEEK_SET should be in stdio.h, but may be in unistd.h on SunOS 4.1.x
if test "$have_fgetpos" != yes ; then
    CHECK_HEADER_DEFINE(SEEK_SET, stdio.h,,
        CHECK_HEADER_DEFINE(SEEK_SET, unistd.h,,
            AC_DEFINE(SEEK_SET, 0)))
fi

AC_CHECK_FUNCS(mkstemp, have_mkstemp=yes)
if test "$have_mkstemp" != yes ; then
    AC_CHECK_FUNCS(chmod)
    if test "$tmpdir_specified" = yes ; then
        AC_MSG_RESULT(use of tmpnam overrides temporary directory selection)
    fi
else
    AC_MSG_CHECKING(directory to use for temporary files)
    if test -z "$enable_tmpdir" -o "$enable_tmpdir" = no -o "$enable_tmpdir" = yes ;
        then tmpdir=/tmp
        else tmpdir="$enable_tmpdir"
    fi
    if test -d $tmpdir ; then
        AC_MSG_RESULT($tmpdir)
        AC_DEFINE_UNQUOTED(TMPDIR, "$tmpdir")
    else
        AC_MSG_WARN($tmpdir does not exist)
    fi
fi

AC_CHECK_FUNCS(strerror opendir)
AC_CHECK_FUNCS(clock times, break)
AC_CHECK_FUNCS(remove, have_remove=yes,
    CHECK_HEADER_DEFINE(remove, unistd.h,, AC_DEFINE(remove, unlink)))

AC_CHECK_FUNCS(truncate, have_truncate=yes)
dnl === Cannot nest AC_CHECK_FUNCS() calls
if test "$have_truncate" != yes  ; then
    AC_CHECK_FUNCS(ftruncate, have_ftruncate=yes)
    if test "$have_ftruncate" != yes ; then
        AC_CHECK_FUNCS(chsize)
    fi
fi

AC_CHECK_FUNCS(setenv, have_setenv=yes)
dnl === Cannot nest AC_CHECK_FUNCS() calls
if test "$have_setenv" != yes ; then
    AC_CHECK_FUNCS(putenv, have_putenv=yes)
    if test "$have_putenv" = yes ; then
        AC_EGREP_HEADER(putenv, stdlib.h, have_putenv_prototype=yes)
        if test "$have_putenv_prototype" = yes ; then
            AC_MSG_CHECKING("putenv prototype")
            AC_EGREP_HEADER([[^A-Za-zo-9_]putenv[   ]*\(.*const.*\)[    ]*;],
                stdlib.h, AC_MSG_RESULT(correct),
                [
                    AC_MSG_RESULT(no const)
                    AC_DEFINE(NON_CONST_PUTENV_PROTOTYPE)
                ])
        fi
    fi
fi

dnl
dnl if test yes = "$CYGWIN"; then with_posix_regex=no; fi
if test no != "$with_posix_regex"; then
    AC_CHECK_FUNCS(regcomp)
    AC_MSG_CHECKING(if regcomp works)
    AC_TRY_RUN([
#include <sys/types.h>
#include <regex.h>
main() {
    regex_t patbuf;
    exit (regcomp (&patbuf, "/hello/", 0) != 0);
}],regcomp_works=yes,regcomp_works=no,AC_DEFINE(CHECK_REGCOMP))
    AC_MSG_RESULT($regcomp_works)
    if test yes != "$regcomp_works"; then
        AC_DEFINE(REGCOMP_BROKEN)
    fi
fi

dnl Checks for missing prototypes
dnl -----------------------------
AC_CHECKING("for missing prototypes")

AC_DEFUN(CHECK_PROTO, [AC_EGREP_HEADER([[^A-Za-z0-9_]$1([   ]+[A-Za-z0-9_]*)?\(], $2,, AC_DEFINE(patsubst([NEED_PROTO_NAME], [NAME], translit($1, [a-z], [A-Z]))) AC_MSG_RESULT(adding prototype for $1))])

if test "$have_remove" = yes ; then
    CHECK_PROTO(remove, stdio.h)
else
    CHECK_PROTO(unlink, unistd.h)
fi
CHECK_PROTO(malloc, stdlib.h)
CHECK_PROTO(getenv, stdlib.h)
CHECK_PROTO(stat,   sys/stat.h)
CHECK_PROTO(lstat,  sys/stat.h)
if test "$have_fgetpos" = yes ; then
    CHECK_PROTO(fgetpos, stdio.h)
fi
if test "$have_truncate" = yes ; then
    CHECK_PROTO(truncate, unistd.h)
fi
if test "$have_ftruncate" = yes ; then
    CHECK_PROTO(ftruncate, unistd.h)
fi

dnl ========== ctags stuffs ends =======================================
dnl =====================================================================

dnl
dnl GDL_CHECK_LIB is defined in gdl.m4.  However, we can't use that yet.
dnl So we have a copy here.  If you modify this, see if you should modify
dnl the one in gdl.m4 too.
dnl
AC_DEFUN(CHECK_LIB, [
	dispname="$1"
	pkgname="$2"
	minvers="$3"
	maxvers="$4"

	AC_MSG_CHECKING(for $dispname)

	if gnome-config --libs $pkgname > /dev/null 2>&1; then
		pkgvers=`gnome-config --modversion $pkgname | sed -e 's/^[[^0-9]]*//'`
	else
		pkgvers=not
	fi
	AC_MSG_RESULT($pkgvers found)

	pkgvers=`echo $pkgvers | awk -F. '{ print $[]1 * 1000000 + $[]2 * 10000 + $[]3 * 100 + $[]4;}'`
	cmpminvers=`echo $minvers | awk -F. '{ print $[]1 * 1000000 + $[]2 * 10000 + $[]3 * 100 + $[]4;}'`
	cmpmaxvers=`echo $maxvers | awk -F. '{ print $[]1 * 1000000 + $[]2 * 10000 + $[]3 * 100 + $[]4;}'`
	ok=yes
	if test "$pkgvers" -lt $cmpminvers; then
		ok=no
	elif test -n "$maxvers" -a "$pkgvers" -ge $cmpmaxvers; then
		ok=no
	fi
	if test $ok = no; then
		case $maxvers in
		"")
			dispvers="$minvers or higher"
			;;
		$minvers)
			dispvers="$minvers (exactly)"
			;;
		*)
			dispvers="$minvers or higher, but less than $maxvers,"
			;;
		esac

		AC_MSG_ERROR([
""
"You need $dispname $dispvers to build GDL"
"If you think you already have this installed, consult the README."])
	fi

	tmp_bsnom=`echo $pkgname | tr a-z A-Z`
	eval $tmp_bsnom'_CFLAGS'=\"`gnome-config --cflags $pkgname`\"
	eval $tmp_bsnom'_LIBS'=\"`gnome-config --libs $pkgname`\"
])

dnl libtool versioning

dnl gdl-0.1.0 = 0
dnl increment if any interfaces have been added; set to 0
dnl  if any interfaces have been removed. removal has 
dnl  precedence over adding, so set to 0 if both happened.
dnl AKA Major
GDL_AGE=0

dnl gdl-0.1.0 = 1
dnl increment any time the source changes; set to 
dnl  0 if you increment CURRENT
dnl AKA Minor
GDL_REVISION=1

dnl gdl-0.1.0 = 1
dnl increment if the interface has additions, changes, removals.
dnl AKA Micro
GAL_CURRENT=1

AC_SUBST(GDL_CURRENT)
AC_SUBST(GDL_REVISION)
AC_SUBST(GDL_AGE)

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CXX
AC_PROG_YACC
AM_PROG_LEX
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LIBTOOL


AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

GNOME_INIT()
GNOME_COMPILE_WARNINGS
GNOME_X_CHECKS

dnl ***************
dnl GNOME Libraries 
dnl ***************

CHECK_LIB(glib, glib, $GLIB_REQUIRED)
CHECK_LIB(gnome-libs, gnome, $GNOME_LIBS_REQUIRED)
CHECK_LIB(Bonobo, bonobo, $BONOBO_REQUIRED)
CHECK_LIB(Bonobo X, bonobox, $BONOBO_REQUIRED)
CHECK_LIB(OAF, oaf, $OAF_REQUIRED)
CHECK_LIB(GNOME-VFS, vfs, $GNOME_VFS_REQUIRED)
CHECK_LIB(libxml, xml, $LIBXML_REQUIRED)
CHECK_LIB(gal, gal, $GAL_REQUIRED)

IDL_CFLAGS=`gnome-config --cflags idl`

AC_SUBST(GLIB_CFLAGS)
AC_SUBST(BONOBO_CFLAGS)
AC_SUBST(BONOBO_LIBS)
AC_SUBST(BONOBOX_CFLAGS)
AC_SUBST(BONOBOX_LIBS)
AC_SUBST(OAF_CFLAGS)
AC_SUBST(VFS_CFLAGS)
AC_SUBST(VFS_LIBS)
AC_SUBST(IDL_CFLAGS)
AC_SUBST(XML_CFLAGS)
AC_SUBST(XML_LIBS)
AC_SUBST(GAL_LIBS)

GNOME_IDL_DIR="`$GNOME_CONFIG --datadir`/idl"

AM_GNOME_GETTEXT
ALL_LINGUAS="az da el it ru sv"
gnomelocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnomelocaledir)

GDL_LIBDIR='-L${libdir}'
GDL_INCLUDEDIR=" -I${includedir} `$GNOME_CONFIG --cflags gnomeui ` $UNICODE_LIBS"
GDL_LIBS="-lgdl `$GNOME_CONFIG --libs bonobox`"
AC_SUBST(GDL_LIBDIR)
AC_SUBST(GDL_INCLUDEDIR)
AC_SUBST(GDL_LIBS)

AC_OUTPUT([
Makefile
gdl/Makefile
idl/Makefile
scintilla-control/Makefile
scintilla-control/scintilla/Makefile
symbol-browser-control/Makefile
symbol-browser-control/tagmanager/Makefile
symbol-browser-control/tagmanager/include/Makefile
intl/Makefile
po/Makefile.in 
stamp.h
gdl.spec
],[sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])
